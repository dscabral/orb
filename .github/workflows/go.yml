name: Go

on:
  workflow_dispatch:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Build services (go build only)
        run: make services

      - name: Build orb agent (go build only)
        run: make agent

      - name: Go unit tests
        run: make test

      # build/test UI?

  package:
    needs: build
    runs-on: ubuntu-latest
    # if this is a push into one of our main branches (rather than just a pull request), we will also package
    if: github.event_name != 'pull_request'

    steps:
      - uses: actions/checkout@v2

      - name: Get branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Debug branch name
        run: echo ${{ env.BRANCH_NAME }}

      - name: Generate ref tag (master)
        if: ${{ env.BRANCH_NAME == 'main' }}
        run: |
          echo "REF_TAG=latest" >> $GITHUB_ENV

      - name: Generate ref tag (develop)
        if: ${{ env.BRANCH_NAME == 'develop' }}
        run: |
          echo "REF_TAG=develop" >> $GITHUB_ENV

      - name: Debug ref tag
        run: echo ${{ env.REF_TAG }}

      - name: Manage Github ref tags
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          # note deleteRef can't start with refs/, but create createRef does.
          script: |
            try {
                await github.git.deleteRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: "tags/${{ env.REF_TAG }}",
                })
            } catch (e) {
              console.log("The tag doesn't exist yet: " + e)
            }
            await github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ env.REF_TAG }}",
              sha: context.sha
            })

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build + push orb-ui
        env:
          IMAGE_NAME: ns1labs/orb-ui
        run: |
          make ui
          docker push ${{ env.IMAGE_NAME }}:${{ env.REF_TAG }}
