name: npm

on:
  workflow_dispatch:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
      # Remove this after tests
      - pipeline/nightwatch-tests

jobs: 
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ui
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            agent:
              - 'agent/**'
              - 'cmd/agent/**'
            fleet:
              - 'fleet/**'
              - 'cmd/fleet/**'
            policies:
              - 'policies/**'
              - 'cmd/policies/**'
            sinks:
              - 'sinks/**'
              - 'cmd/sinks/**'
            sinker:
              - 'sinker/**'
              - 'cmd/sinker/**'
            ui:
              - 'ui/**'      
        
        # Must match the same version used in the dockerfile
      - name: Setup 
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'

        # Cache is invalidated only when there is change on ./ui/package-lock.json
      - name: Cache        
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-

        # Will run faster if package-lock.json exists
      - name: Install         
        run: npm ci --ignore-scripts      
      
      - name: npm audit
        if: steps.filter.outputs.ui == 'true'
        run: npm audit 



  e2e:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            agent:
              - 'agent/**'
              - 'cmd/agent/**'
            fleet:
              - 'fleet/**'
              - 'cmd/fleet/**'
            policies:
              - 'policies/**'
              - 'cmd/policies/**'
            sinks:
              - 'sinks/**'
              - 'cmd/sinks/**'
            sinker:
              - 'sinker/**'
              - 'cmd/sinker/**'
            ui:
              - 'ui/**'
     
      # TODO: The docker build occurs in go.yml and here, is smart to create a 
      # common job to build the docker images only once for test purpose

      - name: Start containers
        timeout-minutes: 20
        run: |
            make dockers_dev
            make ui
            docker-compose --env-file docker/.env -f "docker/docker-compose.yml" up -d 

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Setup npm version
        run: npm install -g npm@7.22

      - name: Setup chrome
        run: |
             # Install latest stable Chrome for e2e tests
             sudo apt --fix-broken install
             sudo apt-get install libxss1 libappindicator1 libindicator7
             wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
             sudo apt install ./google-chrome*.deb

      - name: Check chrome version
        run: google-chrome --version 

      - name: Install dependencies
        working-directory: orb_tests        
        run: npm install --save-dev

      - name: Run tests        
        working-directory: orb_tests
        timeout-minutes: 45
        run: npm run test:ci
        env:
            UI_URL: http://localhost:80
        

      - name: Stop containers
        timeout-minutes: 5
        if: always()
        run: docker-compose -f "docker/docker-compose.yml" down
